import React, { useRef } from 'react';
import {SvgIcon} from '@material-ui/core/';

import { GoogleAuth, Submit } from '../styles';
import TextFieldGrouped from '../components/TextFieldGrouped';
import GoogleLogo from '../../../images/google_icon.svg';
import SignUp from '../components/SignUp';
// import { useAuth } from '../../../contexts/AuthContext';

export default function SignUpPage1({ open, handleClose, handleSignUpPage2Open, handleLogInOpen }) {
  const emailRef = useRef<string | undefined>()
  const passwordRef = useRef<string | undefined>()
  // const {signUp} = useAuth()

  // const submitForm = (e) => {
  //   e.preventDefault()
  //   if (typeof emailRef !== "undefined" && typeof passwordRef !== "undefined") {
  //     signUp(emailRef.current.value, passwordRef.current.value)
  //   }else{
  //     console.log("The refs: 'emailRef' and 'passwordRef' are undefined")
  //   }
  // }

  // const goToPage2 = (e) => {
  //   handleSignUpPage2Open()
  // }

  return (
    <SignUp open={open} handleClose={handleClose} handleLogInOpen={handleLogInOpen}>
      <GoogleAuth fullWidth>
        <SvgIcon component={GoogleLogo} viewBox="0 0 600 476.6" />
        Sign up with Google
      </GoogleAuth>
      <h6 className="marginBelowH6">or</h6>
      <input ref={emailRef} type="email" name="" id=""/>
      <TextFieldGrouped />
      {/* <TextFieldGrouped emailRef={emailRef} passwordRef={passwordRef} /> */}
      {/* <Submit fullWidth onClick={submitForm}>Create account</Submit> */}
      {/* <Submit fullWidth onClick={goToPage2}>Create account</Submit> */}
    </SignUp>
  );
}


            <div className="courseCards">
                <CourseCard courseName="AOT 211" />
                <CourseCard courseName="ATLA 265" />
                <CourseCard courseName="GOT 165" />
                <CourseCard courseName="GOT 165" />
                <CourseCard courseName="GOT 165" />
            </div>


import React, { useState } from 'react';
import {SvgIcon} from '@material-ui/core/';

import { GoogleAuth, Submit } from '../styles';
import TextFieldGrouped from '../components/TextFieldGrouped';
import GoogleLogo from '../../../images/google_icon.svg';
import SignUp from '../components/SignUp';
import { useAuth } from '../../../contexts/AuthContext';
import { returnErrorDetails } from '../../../Functions';

export default function SignUpPage1({ open, handleClose, handleSignUpPage2Open, handleLogInOpen }) {
  const [emailEntry, setEmailEntry] = useState(null)
  const [passwordEntry, setPasswordEntry] = useState(null)
  const [textFieldErrorDetails, setTextFieldErrorDetails] = useState(null)
  const {signUp} = useAuth()

  const submitSignUpForm = (e) => {
    e.preventDefault()

    if (emailEntry !== null && passwordEntry !== null) {
      signUp(emailEntry, passwordEntry).catch(err => {
        setTextFieldErrorDetails(returnErrorDetails(err.code))
      })
    }else{
      console.log("Either or both 'emailEntry' and 'passwordEntry' are null")
    }
  }



  // const goToPage2 = (e) => {
  //   handleSignUpPage2Open()
  // }

  return (
    <SignUp open={open} handleClose={handleClose} handleLogInOpen={handleLogInOpen}>
      <GoogleAuth fullWidth>
        <SvgIcon component={GoogleLogo} viewBox="0 0 600 476.6" />
        Sign up with Google
      </GoogleAuth>
      <h6 className="marginBelowH6">or</h6>
      <TextFieldGrouped 
        setEmailEntry={setEmailEntry} setPasswordEntry={setPasswordEntry}
        textFieldErrorDetails={textFieldErrorDetails}
      />
      <Submit fullWidth onClick={submitSignUpForm}>Create account</Submit>
      {/* <Submit fullWidth onClick={goToPage2}>Create account</Submit> */}
    </SignUp>
  );
}


export enum ErrorCodes {
    // createUserWithEmailAndPassword
    InvalidEmail = "auth/invalid-email",
    EmailAlreadyInUse = "auth/email-already-in-use",
    WeakPassword = "auth/weak-password",
    OperationDisallowed = "auth/operation-not-allowed",
}





import React, { useContext, createContext, useState, useEffect } from 'react'
import { auth } from '../firebase/config'

const AuthContext = createContext()

export function useAuth() {
    return useContext(AuthContext)
}

export function AuthProvider({ children }) {
    const [currentUser, setCurrentUser] = useState()
    const [loading, setLoading] = useState(true)

    useEffect(() => {
        const unsuscribe = auth.onAuthStateChanged(user => {
            setLoading(false)
            setCurrentUser(user)
        })
        return unsuscribe
    }, [])

    /*** THese functions are all you need to change if you want to use another BAAS ***/
    function signUp(email, password) {
        return auth.createUserWithEmailAndPassword(email, password)
    }

    function logIn(email, password) {
        return auth.signInWithEmailAndPassword(email, password)
    }
    /*** ******************************** ***/

    const value = {
        currentUser, signUp, logIn
    }

    return(
        <AuthContext.Provider value={value}>
            {/* {currentUser === null && children} */}
            {!loading && children}
        </AuthContext.Provider>
    )
}







import React, { useState, useEffect } from 'react';
import {SvgIcon} from '@material-ui/core/';
import {Link, useHistory} from 'react-router-dom';

import { GoogleAuth, Submit } from '../styles';
import TextFieldGrouped from '../components/TextFieldGrouped';
import GoogleLogo from '../../../images/google_icon.svg';
import SignUp from '../components/SignUp';
import { useAuth } from '../../../contexts/AuthContext';
import { firebase_returnErrorDetails } from '../../../Functions';

export default function SignUpPage1({ open, handleClose, handleLogInOpen }) {
  const [emailEntry, setEmailEntry] = useState('')
  const [passwordEntry, setPasswordEntry] = useState('') 
  const [textFieldErrorDetails, setTextFieldErrorDetails] = useState(null)
  const [submitIsDisabled, setSubmitIsDisabled] = useState(true)
  const [loading, setLoading] = useState(false)
  const {signUp} = useAuth()
  const history = useHistory()

  useEffect(() => {
    if (emailEntry === '' || passwordEntry === '') {
      setSubmitIsDisabled(true)
    } else {
      setSubmitIsDisabled(false)
    }
  }, [emailEntry, passwordEntry])

  const submitSignUpForm = async (e) => {
    e.preventDefault()
    setLoading(true)

    try {
      await signUp(emailEntry, passwordEntry)
      .catch(err => { throw err; })
      history.push('/profilePage')
      setTextFieldErrorDetails(null)
    } catch (err) {
      setTextFieldErrorDetails(firebase_returnErrorDetails(err.code))
    }

    setLoading(false)
  }

  const resetStates = () => {
    setEmailEntry('')
    setPasswordEntry('')
    setTextFieldErrorDetails(null)
    setSubmitIsDisabled(true)
  }

  return (
    <SignUp 
      open={open} handleClose={handleClose} handleLogInOpen={handleLogInOpen} resetStates={resetStates}
    >
      <GoogleAuth fullWidth>
        <SvgIcon component={GoogleLogo} viewBox="0 0 600 476.6" />
        Sign up with Google
      </GoogleAuth>
      <h6 className="marginBelowH6">or</h6>
      <TextFieldGrouped emailEntry={emailEntry} passwordEntry={passwordEntry}
        setEmailEntry={setEmailEntry} setPasswordEntry={setPasswordEntry}
        textFieldErrorDetails={textFieldErrorDetails}
      />
      <Submit disabled={submitIsDisabled && !loading} fullWidth onClick={submitSignUpForm}>
        Create account
      </Submit>
    </SignUp>
  );
}
